{
  "uid" : "73ae5a9aeacaee48",
  "name" : "test_searchUser[username0]",
  "fullName" : "cases.test_login.Test_login#test_searchUser",
  "historyId" : "5c657c871be491c44aa8e2da15aa8e88",
  "time" : {
    "start" : 1613270710190,
    "stop" : 1613270710190,
    "duration" : 0
  },
  "status" : "broken",
  "statusMessage" : "ValueError: browser did not yield a value",
  "statusTrace" : "cls = _pytest.runner.CallInfo\nfunc = <function call_runtest_hook.<locals>.<lambda> at 0x02B6ABB8>\nwhen = 'setup'\nreraise = (<class '_pytest.outcomes.Exit'>, <class 'KeyboardInterrupt'>)\n\n    @classmethod\n    def from_call(\n        cls,\n        func: \"Callable[[], TResult]\",\n        when: \"Literal['collect', 'setup', 'call', 'teardown']\",\n        reraise: Optional[\n            Union[Type[BaseException], Tuple[Type[BaseException], ...]]\n        ] = None,\n    ) -> \"CallInfo[TResult]\":\n        excinfo = None\n        start = timing.time()\n        precise_start = timing.perf_counter()\n        try:\n>           result: Optional[TResult] = func()\n\nvenv\\lib\\site-packages\\_pytest\\runner.py:311: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nvenv\\lib\\site-packages\\_pytest\\runner.py:255: in <lambda>\n    lambda: ihook(item=item, **kwds), when=when, reraise=reraise\nvenv\\lib\\site-packages\\pluggy\\hooks.py:286: in __call__\n    return self._hookexec(self, self.get_hookimpls(), kwargs)\nvenv\\lib\\site-packages\\pluggy\\manager.py:93: in _hookexec\n    return self._inner_hookexec(hook, methods, kwargs)\nvenv\\lib\\site-packages\\pluggy\\manager.py:87: in <lambda>\n    firstresult=hook.spec.opts.get(\"firstresult\") if hook.spec else False,\nvenv\\lib\\site-packages\\_pytest\\runner.py:150: in pytest_runtest_setup\n    item.session._setupstate.prepare(item)\nvenv\\lib\\site-packages\\_pytest\\runner.py:452: in prepare\n    raise e\nvenv\\lib\\site-packages\\_pytest\\runner.py:449: in prepare\n    col.setup()\nvenv\\lib\\site-packages\\_pytest\\python.py:1647: in setup\n    self._request._fillfixtures()\nvenv\\lib\\site-packages\\_pytest\\fixtures.py:568: in _fillfixtures\n    item.funcargs[argname] = self.getfixturevalue(argname)\nvenv\\lib\\site-packages\\_pytest\\fixtures.py:581: in getfixturevalue\n    fixturedef = self._get_active_fixturedef(argname)\nvenv\\lib\\site-packages\\_pytest\\fixtures.py:601: in _get_active_fixturedef\n    self._compute_fixture_value(fixturedef)\nvenv\\lib\\site-packages\\_pytest\\fixtures.py:687: in _compute_fixture_value\n    fixturedef.execute(request=subrequest)\nvenv\\lib\\site-packages\\_pytest\\fixtures.py:1062: in execute\n    raise val.with_traceback(tb)\nvenv\\lib\\site-packages\\_pytest\\fixtures.py:1126: in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nfixturefunc = <function browser at 0x0284E8E8>\nrequest = <SubRequest 'browser' for <Function test_loginSuccess[listcases0]>>\nkwargs = {'request': <SubRequest 'browser' for <Function test_loginSuccess[listcases0]>>}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[_FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> _FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[_FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n>               raise ValueError(f\"{request.fixturename} did not yield a value\") from None\nE               ValueError: browser did not yield a value\n\nvenv\\lib\\site-packages\\_pytest\\fixtures.py:927: ValueError",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "browser",
    "time" : {
      "start" : 1613270700910,
      "stop" : 1613270708288,
      "duration" : 7378
    },
    "status" : "broken",
    "statusMessage" : "ValueError: browser did not yield a value\n",
    "statusTrace" : "  File \"D:\\pytest_test\\venv\\lib\\site-packages\\pluggy\\callers.py\", line 187, in _multicall\n    res = hook_impl.function(*args)\n  File \"D:\\pytest_test\\venv\\lib\\site-packages\\_pytest\\fixtures.py\", line 1126, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n  File \"D:\\pytest_test\\venv\\lib\\site-packages\\_pytest\\fixtures.py\", line 927, in call_fixture_func\n    raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : true,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : true
  } ],
  "testStage" : {
    "status" : "broken",
    "statusMessage" : "ValueError: browser did not yield a value",
    "statusTrace" : "cls = _pytest.runner.CallInfo\nfunc = <function call_runtest_hook.<locals>.<lambda> at 0x02B6ABB8>\nwhen = 'setup'\nreraise = (<class '_pytest.outcomes.Exit'>, <class 'KeyboardInterrupt'>)\n\n    @classmethod\n    def from_call(\n        cls,\n        func: \"Callable[[], TResult]\",\n        when: \"Literal['collect', 'setup', 'call', 'teardown']\",\n        reraise: Optional[\n            Union[Type[BaseException], Tuple[Type[BaseException], ...]]\n        ] = None,\n    ) -> \"CallInfo[TResult]\":\n        excinfo = None\n        start = timing.time()\n        precise_start = timing.perf_counter()\n        try:\n>           result: Optional[TResult] = func()\n\nvenv\\lib\\site-packages\\_pytest\\runner.py:311: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nvenv\\lib\\site-packages\\_pytest\\runner.py:255: in <lambda>\n    lambda: ihook(item=item, **kwds), when=when, reraise=reraise\nvenv\\lib\\site-packages\\pluggy\\hooks.py:286: in __call__\n    return self._hookexec(self, self.get_hookimpls(), kwargs)\nvenv\\lib\\site-packages\\pluggy\\manager.py:93: in _hookexec\n    return self._inner_hookexec(hook, methods, kwargs)\nvenv\\lib\\site-packages\\pluggy\\manager.py:87: in <lambda>\n    firstresult=hook.spec.opts.get(\"firstresult\") if hook.spec else False,\nvenv\\lib\\site-packages\\_pytest\\runner.py:150: in pytest_runtest_setup\n    item.session._setupstate.prepare(item)\nvenv\\lib\\site-packages\\_pytest\\runner.py:452: in prepare\n    raise e\nvenv\\lib\\site-packages\\_pytest\\runner.py:449: in prepare\n    col.setup()\nvenv\\lib\\site-packages\\_pytest\\python.py:1647: in setup\n    self._request._fillfixtures()\nvenv\\lib\\site-packages\\_pytest\\fixtures.py:568: in _fillfixtures\n    item.funcargs[argname] = self.getfixturevalue(argname)\nvenv\\lib\\site-packages\\_pytest\\fixtures.py:581: in getfixturevalue\n    fixturedef = self._get_active_fixturedef(argname)\nvenv\\lib\\site-packages\\_pytest\\fixtures.py:601: in _get_active_fixturedef\n    self._compute_fixture_value(fixturedef)\nvenv\\lib\\site-packages\\_pytest\\fixtures.py:687: in _compute_fixture_value\n    fixturedef.execute(request=subrequest)\nvenv\\lib\\site-packages\\_pytest\\fixtures.py:1062: in execute\n    raise val.with_traceback(tb)\nvenv\\lib\\site-packages\\_pytest\\fixtures.py:1126: in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nfixturefunc = <function browser at 0x0284E8E8>\nrequest = <SubRequest 'browser' for <Function test_loginSuccess[listcases0]>>\nkwargs = {'request': <SubRequest 'browser' for <Function test_loginSuccess[listcases0]>>}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[_FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> _FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[_FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n>               raise ValueError(f\"{request.fixturename} did not yield a value\") from None\nE               ValueError: browser did not yield a value\n\nvenv\\lib\\site-packages\\_pytest\\fixtures.py:927: ValueError",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "e7d151ca51c4a3ca",
      "name" : "失败截图20210214104510",
      "source" : "e7d151ca51c4a3ca.png",
      "type" : "image/png",
      "size" : 4700
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : true,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : true
  },
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "feature",
    "value" : "后台系统"
  }, {
    "name" : "story",
    "value" : "用户界面搜索用例"
  }, {
    "name" : "parentSuite",
    "value" : "cases"
  }, {
    "name" : "suite",
    "value" : "test_login"
  }, {
    "name" : "subSuite",
    "value" : "Test_login"
  }, {
    "name" : "host",
    "value" : "PC-20160329AGKD"
  }, {
    "name" : "thread",
    "value" : "3764-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "cases.test_login"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ {
    "name" : "username",
    "value" : "{'title': '用户管理查询', 'cases': [{'name': '打开用户管理页面', 'method': 'getUrl', 'url': 'http://boxadmin.smartbearkit.com/#/baseManager/userManager'}, {'name': '输入用户名', 'method': 'input', 'locator': '//*[@id=\"app\"]/div/div/section/div/div[1]/div/input', 'value': 'ccx'}, {'name': '点击登录', 'method': 'click', 'locator': '//*[@id=\"app\"]/div/div/section/div/div[1]/button[1]/span'}]}"
  } ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ {
      "uid" : "efc68f81764d5b92",
      "status" : "broken",
      "statusDetails" : "selenium.common.exceptions.InvalidSelectorException: Message: invalid selector: Unable to locate an element with the xpath expression  because of the following error:\nSyntaxError: Failed to execute 'evaluate' on 'Document': The string '' is not a valid XPath expression.\n  (Session info: chrome=88.0.4324.150)",
      "time" : {
        "start" : 1613268879131,
        "stop" : 1613268879163,
        "duration" : 32
      }
    }, {
      "uid" : "347634d932e41c5c",
      "status" : "broken",
      "statusDetails" : "AttributeError: 'WebKeywords' object has no attribute 'driver'",
      "time" : {
        "start" : 1613267637760,
        "stop" : 1613267637762,
        "duration" : 2
      }
    }, {
      "uid" : "36bace245cd5106",
      "status" : "broken",
      "statusDetails" : "AttributeError: 'WebKeywords' object has no attribute 'driver'",
      "time" : {
        "start" : 1613267321158,
        "stop" : 1613267321160,
        "duration" : 2
      }
    }, {
      "uid" : "4be5700e2f232aef",
      "status" : "broken",
      "statusDetails" : "AttributeError: 'NoneType' object has no attribute 'get'",
      "time" : {
        "start" : 1613265599071,
        "stop" : 1613265599073,
        "duration" : 2
      }
    }, {
      "uid" : "cd008f9591f2821",
      "status" : "broken",
      "statusDetails" : "AttributeError: 'NoneType' object has no attribute 'get'",
      "time" : {
        "start" : 1613265012298,
        "stop" : 1613265012300,
        "duration" : 2
      }
    }, {
      "uid" : "d6c4b3fd868c5032",
      "status" : "broken",
      "statusDetails" : "AttributeError: 'NoneType' object has no attribute 'get'",
      "time" : {
        "start" : 1613226311615,
        "stop" : 1613226311932,
        "duration" : 317
      }
    } ],
    "categories" : [ {
      "name" : "Test defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "tags" : [ ]
  },
  "source" : "73ae5a9aeacaee48.json",
  "parameterValues" : [ "{'title': '用户管理查询', 'cases': [{'name': '打开用户管理页面', 'method': 'getUrl', 'url': 'http://boxadmin.smartbearkit.com/#/baseManager/userManager'}, {'name': '输入用户名', 'method': 'input', 'locator': '//*[@id=\"app\"]/div/div/section/div/div[1]/div/input', 'value': 'ccx'}, {'name': '点击登录', 'method': 'click', 'locator': '//*[@id=\"app\"]/div/div/section/div/div[1]/button[1]/span'}]}" ]
}